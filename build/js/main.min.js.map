{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/main.js","webpack:///./js/modules/accordion.js","webpack:///./js/modules/data.js","webpack:///./js/modules/inputmask.js","webpack:///./js/modules/modals/modal.js"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/main.js\");\n","import {\n  showModal\n} from './modules/modals/modal.js';\n\nimport {\n  makeAccordion,\n  accordionHandler\n} from './modules/accordion.js';\n\nimport {\n  callButton,\n  aboutText,\n  mainForm,\n  aboutButton,\n  WIDEVIEWPORT,\n  MOBILEVIEWPORT,\n  accordion,\n  body\n} from './modules/data.js';\n\n\nimport {maskHandler} from './modules/inputmask.js';\n\nconst hiddenText = aboutText.querySelector('.about-text--hidden');\nconst mobileHiddenText = aboutText.querySelector('.about-text__mobile-hidden');\nconst aboutOpenButtonText = aboutButton.querySelector('.about__open');\nconst aboutCloseButtonText = aboutButton.querySelector('.about__close');\nconst mainFormTel = mainForm.querySelector('input[type=\"tel\"]');\n\nhiddenText.classList.add('visually-hidden');\naboutButton.classList.toggle('visually-hidden');\n\n\nif (MOBILEVIEWPORT > body.clientWidth) {\n  if (!mobileHiddenText.classList.contains('visually-hidden')) {\n    mobileHiddenText.classList.add('visually-hidden');\n  }\n}\n\nconst mainFormTelHandler = (evt) => {\n  evt.preventDefault();\n  maskHandler(evt.target);\n};\n\nmainFormTel.addEventListener('input', mainFormTelHandler);\n\n\nconst callButtonHandler = (evt) => {\n  evt.preventDefault();\n  showModal();\n};\n\nif (WIDEVIEWPORT <= body.clientWidth) {\n  callButton.addEventListener('click', callButtonHandler);\n}\n\nmainForm.addEventListener('submit', (evt)=>{\n  evt.preventDefault();\n  mainForm.submit();\n  mainForm.reset();\n});\n\naboutButton.addEventListener('click', ()=> {\n  hiddenText.classList.toggle('visually-hidden');\n  aboutCloseButtonText.classList.toggle('visually-hidden');\n  aboutOpenButtonText.classList.toggle('visually-hidden');\n});\n\n\nmakeAccordion();\n\nwindow.addEventListener('resize', ()=> {\n  const currentViewport = body.clientWidth;\n  if (WIDEVIEWPORT <= currentViewport) {\n    callButton.removeEventListener('click', callButtonHandler);\n    callButton.addEventListener('click', callButtonHandler);\n  }\n  if (MOBILEVIEWPORT > body.clientWidth) {\n    if (!mobileHiddenText.classList.contains('visually-hidden')) {\n      mobileHiddenText.classList.add('visually-hidden');\n    }\n  } else {\n    if (mobileHiddenText.classList.contains('visually-hidden')) {\n      mobileHiddenText.classList.remove('visually-hidden');\n    }\n  }\n  accordion.removeEventListener('click', accordionHandler);\n  makeAccordion();\n\n});\n","import {\n  accordion,\n  accordionControls,\n  body,\n  HIDESECTION,\n  MOBILEVIEWPORT\n} from './data';\n\n\nconst hideAccordionSection = () => {\n  accordionControls.forEach((element) => {\n    if (!element.classList.contains(HIDESECTION)) {\n      element.classList.add(HIDESECTION);\n    }\n  });\n};\n\nconst accordionHandler = (evt)=>{\n\n  const button = evt.target.closest('button');\n  if (button) {\n    accordionControls.forEach((element) => {\n      if (element !== button && !element.classList.contains(HIDESECTION)) {\n        element.classList.add(HIDESECTION);\n      }\n    });\n    button.classList.toggle(HIDESECTION);\n  }\n};\n\nconst makeAccordion = () => {\n  if (body.clientWidth < MOBILEVIEWPORT) {\n    hideAccordionSection();\n\n    accordion.addEventListener('click', accordionHandler);\n  }\n\n};\n\nexport {\n  makeAccordion,\n  accordionHandler\n};\n","const REGION = '+7';\nconst HIDESECTION = 'accordion__control--hide-section';\nconst MOBILEVIEWPORT = '768';\nconst WIDEVIEWPORT = '1024';\n\nconst body = document.querySelector('body');\nconst header = body.querySelector('header');\nconst callButton = body.querySelector('.callback-button');\nconst modal = body.querySelector('.modal');\nconst closeModalButton = modal.querySelector('.modal__close-button');\nconst modalArea = modal.querySelector('.modal__feedback');\nconst modalForm = modal.querySelector('.modal__feedback-form');\nconst modalSubmitButton = modalForm.querySelector('.modal__feedback-submit');\nconst checkbox = modalForm.querySelector('input[type=\"checkbox\"]');\nconst aboutText = document.querySelector('.about__text-container');\nconst mainForm = body.querySelector('.feedback__form');\nconst mainSubmitButton = mainForm.querySelector('.feedback-form__submit');\nconst about = body.querySelector('.about');\nconst aboutButton = about.querySelector('.about__button');\nconst accordionControls = body.querySelectorAll('.accordion__control');\nconst accordion = body.querySelector('.accordion');\n\nexport {\n  body,\n  header,\n  callButton,\n  modal,\n  closeModalButton,\n  modalArea,\n  modalSubmitButton,\n  checkbox,\n  aboutText,\n  REGION,\n  modalForm,\n  mainForm,\n  mainSubmitButton,\n  aboutButton,\n  HIDESECTION,\n  MOBILEVIEWPORT,\n  WIDEVIEWPORT,\n  accordionControls,\n  accordion\n};\n","import {REGION} from './data';\n\nconst fillNumber = (val) => {\n  let swapValue = '';\n  swapValue = val.replace(/\\D/gm, '');\n  swapValue = swapValue[0] !== '7' ? `${REGION}${swapValue}` : `+${swapValue}`;\n  swapValue = swapValue.replace(swapValue.substring(0, 2), (str)=> str + '(');\n  if (swapValue.length >= 6) {\n    swapValue = swapValue.replace(swapValue.substring(0, 6), (str) => str + ')');\n  }\n  if (swapValue.length >= 14) {\n    swapValue = swapValue.substring(0, 14);\n  }\n\n  return swapValue;\n};\n\nlet prev = '';\n\nconst maskHandler = (input) => {\n  prev = input.value.length > prev.length ? input.value : prev;\n\n  if (prev.length <= input.value.length) {\n    input.value = fillNumber(input.value);\n  }\n\n  prev = input.value;\n};\n\nexport {maskHandler};\n","import {\n  body,\n  modal,\n  modalForm,\n  closeModalButton\n} from '../data.js';\nimport {maskHandler} from '../inputmask.js';\n\nconst inputName = modal.querySelector('input[name=\"name\"]');\nconst header = body.querySelector('.header__container');\n\nconst modalFormTel = modalForm.querySelector('input[type=\"tel\"]');\n\nconst modalFormTelHandler = (evt) => {\n  evt.preventDefault();\n  maskHandler(evt.target);\n};\n\nmodalFormTel.addEventListener('input', modalFormTelHandler);\n\nconst modalHandler = (evt) => {\n  evt.stopPropagation();\n  if (evt.target === modal || evt.target === closeModalButton) {\n    closeModal();\n    modal.removeEventListener('click', modalHandler);\n    modalForm.removeEventListener('submit', modalSubmitHandler);\n  }\n};\n\nconst modalSubmitHandler = (evt) => {\n  evt.preventDefault();\n  modalForm.submit();\n  closeModal();\n\n};\n\n\nconst showModal = () => {\n  inputName.focus();\n  modal.classList.remove('visually-hidden');\n  header.classList.add('wrapper--header-show-modal');\n  body.style.overflow = 'hidden';\n  modal.addEventListener('click', modalHandler);\n  modalForm.addEventListener('submit', modalSubmitHandler);\n};\n\nconst closeModal = () => {\n  modal.classList.add('visually-hidden');\n  body.style.overflow = 'initial';\n  header.classList.remove('wrapper--header-show-modal');\n  modalForm.reset();\n  modalForm.removeEventListener('input', modalFormTelHandler);\n  modal.removeEventListener('click', modalHandler);\n  modalForm.removeEventListener('submit', modalSubmitHandler);\n};\n\nexport {\n  showModal,\n  closeModal\n};\n"],"sourceRoot":""}